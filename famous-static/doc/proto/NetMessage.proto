syntax = "proto3" ;
package LockstepProto;

import "LSMessage.proto";

option java_multiple_files = true;

enum NetMessage /*协议号*/
{
    NET_MESSAGE_DEFAULT = 0;

    C2S_HeartBeat = 1;
    S2C_HeartBeat = 2;

    C2S_LockStepInit = 13;
    S2C_LockStepInit = 14;

    C2S_LockStep = 15;
    S2C_LockStep = 16;

    C2S_Match = 17;
    S2C_Match = 18;

    C2S_State = 19;//是否准备好
    S2C_State = 20;

    C2S_Reconnect = 21;//检测是否需要重连
    S2C_Reconnect = 22;

    C2S_PullFrame = 23;//获取指定范围的帧
    S2C_PullFrame = 24;

    C2S_BattleEnd = 25;//战斗结束
    S2C_BattleEnd = 26;
}

message C2SHeartBeat
{
    int32 seq=1;
}

message S2CHeartBeat
{
    int32 seq=1;
}

message C2SLockStepInit
{
    bool singlePlayer = 1;
    bool stopLockStep = 2;
}

message S2CLockStepInit
{
    int32 controlerID = 1;
}

message C2SLockStep
{
    Command c = 1;
}

message S2CLockStep
{
    repeated Frame f = 1;
}

message C2SMatch
{
    sint64 userId = 1;
    sint64 roleId = 2;
    string token = 3;
    sint32 schoolId = 4;
    sint64 groupId = 5;
}

message S2CMatch
{
    repeated BattleActor actors = 1;
    uint32 seed = 2;
    sint32 mapId = 3;
    sint64 battleStartTime = 4;
}

message C2SState
{
    uint32 state = 1;
}

message S2CState
{
    sint64 roleId = 1;
    sint32 state = 2;
}

message C2SReconnect
{
    sint64 roleId = 1;
}

message S2CReconnect
{
    uint32 state = 1;
}

message C2SPullFrame
{
    uint32 frameIdBegin = 1;
    uint32 frameIdEnd = 2;
}

message S2CPullFrame
{
    repeated Frame f = 1;
}

message C2SBattleEnd
{
    repeated sint64 winners = 1;
    repeated sint64 losers = 2;
    uint32 state = 3;      // 0=normal, 1=exception, 2=surrender
}

message S2CBattleEnd
{
    repeated sint64 winners = 1;
    repeated sint64 losers = 2;
}

