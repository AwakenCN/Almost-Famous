/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.liema.common.rpc.protocol;


/**
 * thrift支持的数据类型：
 * 
 *  bool          布尔类型
 *  i8 (byte)     整型8位
 *  i16           整型16位
 *  i32           整型32位
 *  i64           整型64位
 *  double        64位的浮点数
 *  string        字符串
 *  binary        字节
 *  map<t1,t2>    Map集合
 *  list<t1>      List集合
 *  set<t1>       Set集合
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-08-07")
public enum UniqueNameEnum implements org.apache.thrift.TEnum {
  REPEAT(0),
  SUCCESS(1),
  FAIL(2);

  private final int value;

  private UniqueNameEnum(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  @org.apache.thrift.annotation.Nullable
  public static UniqueNameEnum findByValue(int value) { 
    switch (value) {
      case 0:
        return REPEAT;
      case 1:
        return SUCCESS;
      case 2:
        return FAIL;
      default:
        return null;
    }
  }
}
