// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NetMessage.proto

package LockstepProto;

/**
 * Protobuf type {@code LockstepProto.C2SMatch}
 */
public  final class C2SMatch extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:LockstepProto.C2SMatch)
    C2SMatchOrBuilder {
private static final long serialVersionUID = 0L;
  // Use C2SMatch.newBuilder() to construct.
  private C2SMatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private C2SMatch() {
    token_ = "";
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new C2SMatch();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private C2SMatch(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            userId_ = input.readSInt64();
            break;
          }
          case 16: {

            roleId_ = input.readSInt64();
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            token_ = s;
            break;
          }
          case 32: {

            schoolId_ = input.readSInt32();
            break;
          }
          case 40: {

            groupId_ = input.readSInt64();
            break;
          }
          case 48: {

            battleMode_ = input.readSInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return LockstepProto.NetMessageOuterClass.internal_static_LockstepProto_C2SMatch_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return LockstepProto.NetMessageOuterClass.internal_static_LockstepProto_C2SMatch_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            C2SMatch.class, Builder.class);
  }

  public static final int USERID_FIELD_NUMBER = 1;
  private long userId_;
  /**
   * <code>sint64 userId = 1;</code>
   */
  public long getUserId() {
    return userId_;
  }

  public static final int ROLEID_FIELD_NUMBER = 2;
  private long roleId_;
  /**
   * <code>sint64 roleId = 2;</code>
   */
  public long getRoleId() {
    return roleId_;
  }

  public static final int TOKEN_FIELD_NUMBER = 3;
  private volatile Object token_;
  /**
   * <code>string token = 3;</code>
   */
  public String getToken() {
    Object ref = token_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      token_ = s;
      return s;
    }
  }
  /**
   * <code>string token = 3;</code>
   */
  public com.google.protobuf.ByteString
      getTokenBytes() {
    Object ref = token_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      token_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCHOOLID_FIELD_NUMBER = 4;
  private int schoolId_;
  /**
   * <code>sint32 schoolId = 4;</code>
   */
  public int getSchoolId() {
    return schoolId_;
  }

  public static final int GROUPID_FIELD_NUMBER = 5;
  private long groupId_;
  /**
   * <code>sint64 groupId = 5;</code>
   */
  public long getGroupId() {
    return groupId_;
  }

  public static final int BATTLEMODE_FIELD_NUMBER = 6;
  private int battleMode_;
  /**
   * <code>sint32 battleMode = 6;</code>
   */
  public int getBattleMode() {
    return battleMode_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (userId_ != 0L) {
      output.writeSInt64(1, userId_);
    }
    if (roleId_ != 0L) {
      output.writeSInt64(2, roleId_);
    }
    if (!getTokenBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, token_);
    }
    if (schoolId_ != 0) {
      output.writeSInt32(4, schoolId_);
    }
    if (groupId_ != 0L) {
      output.writeSInt64(5, groupId_);
    }
    if (battleMode_ != 0) {
      output.writeSInt32(6, battleMode_);
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (userId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(1, userId_);
    }
    if (roleId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(2, roleId_);
    }
    if (!getTokenBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, token_);
    }
    if (schoolId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(4, schoolId_);
    }
    if (groupId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(5, groupId_);
    }
    if (battleMode_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(6, battleMode_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof C2SMatch)) {
      return super.equals(obj);
    }
    C2SMatch other = (C2SMatch) obj;

    if (getUserId()
        != other.getUserId()) return false;
    if (getRoleId()
        != other.getRoleId()) return false;
    if (!getToken()
        .equals(other.getToken())) return false;
    if (getSchoolId()
        != other.getSchoolId()) return false;
    if (getGroupId()
        != other.getGroupId()) return false;
    if (getBattleMode()
        != other.getBattleMode()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + USERID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUserId());
    hash = (37 * hash) + ROLEID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRoleId());
    hash = (37 * hash) + TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getToken().hashCode();
    hash = (37 * hash) + SCHOOLID_FIELD_NUMBER;
    hash = (53 * hash) + getSchoolId();
    hash = (37 * hash) + GROUPID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getGroupId());
    hash = (37 * hash) + BATTLEMODE_FIELD_NUMBER;
    hash = (53 * hash) + getBattleMode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static C2SMatch parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static C2SMatch parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static C2SMatch parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static C2SMatch parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static C2SMatch parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static C2SMatch parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static C2SMatch parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static C2SMatch parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static C2SMatch parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static C2SMatch parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static C2SMatch parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static C2SMatch parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(C2SMatch prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code LockstepProto.C2SMatch}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:LockstepProto.C2SMatch)
      LockstepProto.C2SMatchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LockstepProto.NetMessageOuterClass.internal_static_LockstepProto_C2SMatch_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LockstepProto.NetMessageOuterClass.internal_static_LockstepProto_C2SMatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              C2SMatch.class, Builder.class);
    }

    // Construct using LockstepProto.C2SMatch.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      userId_ = 0L;

      roleId_ = 0L;

      token_ = "";

      schoolId_ = 0;

      groupId_ = 0L;

      battleMode_ = 0;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return LockstepProto.NetMessageOuterClass.internal_static_LockstepProto_C2SMatch_descriptor;
    }

    @Override
    public C2SMatch getDefaultInstanceForType() {
      return C2SMatch.getDefaultInstance();
    }

    @Override
    public C2SMatch build() {
      C2SMatch result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public C2SMatch buildPartial() {
      C2SMatch result = new C2SMatch(this);
      result.userId_ = userId_;
      result.roleId_ = roleId_;
      result.token_ = token_;
      result.schoolId_ = schoolId_;
      result.groupId_ = groupId_;
      result.battleMode_ = battleMode_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof C2SMatch) {
        return mergeFrom((C2SMatch)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(C2SMatch other) {
      if (other == C2SMatch.getDefaultInstance()) return this;
      if (other.getUserId() != 0L) {
        setUserId(other.getUserId());
      }
      if (other.getRoleId() != 0L) {
        setRoleId(other.getRoleId());
      }
      if (!other.getToken().isEmpty()) {
        token_ = other.token_;
        onChanged();
      }
      if (other.getSchoolId() != 0) {
        setSchoolId(other.getSchoolId());
      }
      if (other.getGroupId() != 0L) {
        setGroupId(other.getGroupId());
      }
      if (other.getBattleMode() != 0) {
        setBattleMode(other.getBattleMode());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      C2SMatch parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (C2SMatch) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long userId_ ;
    /**
     * <code>sint64 userId = 1;</code>
     */
    public long getUserId() {
      return userId_;
    }
    /**
     * <code>sint64 userId = 1;</code>
     */
    public Builder setUserId(long value) {
      
      userId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sint64 userId = 1;</code>
     */
    public Builder clearUserId() {
      
      userId_ = 0L;
      onChanged();
      return this;
    }

    private long roleId_ ;
    /**
     * <code>sint64 roleId = 2;</code>
     */
    public long getRoleId() {
      return roleId_;
    }
    /**
     * <code>sint64 roleId = 2;</code>
     */
    public Builder setRoleId(long value) {
      
      roleId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sint64 roleId = 2;</code>
     */
    public Builder clearRoleId() {
      
      roleId_ = 0L;
      onChanged();
      return this;
    }

    private Object token_ = "";
    /**
     * <code>string token = 3;</code>
     */
    public String getToken() {
      Object ref = token_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        token_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string token = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      Object ref = token_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string token = 3;</code>
     */
    public Builder setToken(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      token_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string token = 3;</code>
     */
    public Builder clearToken() {
      
      token_ = getDefaultInstance().getToken();
      onChanged();
      return this;
    }
    /**
     * <code>string token = 3;</code>
     */
    public Builder setTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      token_ = value;
      onChanged();
      return this;
    }

    private int schoolId_ ;
    /**
     * <code>sint32 schoolId = 4;</code>
     */
    public int getSchoolId() {
      return schoolId_;
    }
    /**
     * <code>sint32 schoolId = 4;</code>
     */
    public Builder setSchoolId(int value) {
      
      schoolId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sint32 schoolId = 4;</code>
     */
    public Builder clearSchoolId() {
      
      schoolId_ = 0;
      onChanged();
      return this;
    }

    private long groupId_ ;
    /**
     * <code>sint64 groupId = 5;</code>
     */
    public long getGroupId() {
      return groupId_;
    }
    /**
     * <code>sint64 groupId = 5;</code>
     */
    public Builder setGroupId(long value) {
      
      groupId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sint64 groupId = 5;</code>
     */
    public Builder clearGroupId() {
      
      groupId_ = 0L;
      onChanged();
      return this;
    }

    private int battleMode_ ;
    /**
     * <code>sint32 battleMode = 6;</code>
     */
    public int getBattleMode() {
      return battleMode_;
    }
    /**
     * <code>sint32 battleMode = 6;</code>
     */
    public Builder setBattleMode(int value) {
      
      battleMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>sint32 battleMode = 6;</code>
     */
    public Builder clearBattleMode() {
      
      battleMode_ = 0;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:LockstepProto.C2SMatch)
  }

  // @@protoc_insertion_point(class_scope:LockstepProto.C2SMatch)
  private static final C2SMatch DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new C2SMatch();
  }

  public static C2SMatch getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<C2SMatch>
      PARSER = new com.google.protobuf.AbstractParser<C2SMatch>() {
    @Override
    public C2SMatch parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new C2SMatch(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<C2SMatch> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<C2SMatch> getParserForType() {
    return PARSER;
  }

  @Override
  public C2SMatch getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

