buildscript {
    ext {
        set('springBootVersion', '2.1.3.RELEASE')
        set('springCloudVersion', 'Greenwich.RELEASE')
        set('druidVersion', '1.1.13')
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
    }
}



subprojects {
    group 'com.liema'
    version '1.0-SNAPSHOT'

    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

    repositories {
        mavenCentral()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    }

    jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }

    // 显示当前项目下所有用于 compile 的 jar.
    task listJars(description: 'Display all compile jars.') << {
        configurations.compile.each { File file -> println file.name }
    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }


}


// Gradle 生命周期开始执行
beforeEvaluate {
    println '配置阶段开始...'
}

afterEvaluate {
    println '配置阶段结束...'
}

this.gradle.buildFinished {
    println '构建阶段完毕...'
}